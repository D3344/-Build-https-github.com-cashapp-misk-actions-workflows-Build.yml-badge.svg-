#!/bin/bash

set -euxo pipefail

# Fill in GIT_COMMIT using `git` if not already set
export GIT_COMMIT="${GIT_COMMIT:-$(git rev-parse --short HEAD)}"

export STAGING_BUILD="${STAGING_BUILD:-}"

# -s for staging, -g for platform-staging, -n for plat-ops-staging
export STAGING_PUSH_TARGETS="${STAGING_PUSH_TARGETS:-"-s"}"

# Update and reset cash-ci repo to avoid the slow process of cloning on each run
export CASH_CI_ROOT=/tmp/cash-ci-gap
if [ ! -d ${CASH_CI_ROOT} ]; then
  mkdir -p ${CASH_CI_ROOT}
  git clone --depth=1 org-49461806@github.com:squareup/cash-ci.git ${CASH_CI_ROOT}
else
  pushd ${CASH_CI_ROOT}
  git fetch origin
  git reset --hard origin/master
  git clean -fdx .
  popd
fi

set -euxo pipefail
export APP_NAME=cloner

CGO_ENABLED=0 go build -mod=vendor -a -tags netgo -ldflags '-extldflags "-static"' -o ${APP_NAME} ./cmd/${APP_NAME}

# Push to ECR?
export PUSH=""
export VERSION="${GIT_COMMIT}"

if [[ -n "$STAGING_BUILD" ]]; then
  VERSION=$USER-localbuild-$GIT_COMMIT
  DOCKER_TAG="${APP_NAME}:${VERSION}"
  PUSH="-l ${STAGING_PUSH_TARGETS}"
elif [[ "$(uname)" == "Darwin" ]]; then
  DOCKER_TAG=$(echo ${APP_NAME} | tr -cd [:alnum:])
elif [[ -n "${KOCHIKU_CANARY_BUILD:-}" ]]; then
  DOCKER_TAG="$APP_NAME:$GIT_COMMIT"
  PUSH="-s"
else
  DOCKER_TAG="$APP_NAME:$GIT_COMMIT"
  PUSH="-s -p"
fi

time docker build -t "${DOCKER_TAG}" --build-arg SERVICE="${APP_NAME}" --build-arg GIT_COMMIT="${GIT_COMMIT}" .
if [[ -n "$PUSH" ]]; then
  if [[ -z "$STAGING_BUILD" && "$GIT_BRANCH" != "master" && -z "${KOCHIKU_CANARY_BUILD:-}" ]]; then
    echo "Skipping docker upload for $GIT_BRANCH."
  else
    ${CASH_CI_ROOT}/cash-docker-push -r ${APP_NAME} -t ${VERSION} $PUSH
  fi
fi
